name: Build docker image
on:
  push:
    paths:
      - exchange-rates/**
      - .github/**
      - .custon-ci-actions/**
    branches:
      - main
      - staging
      - stable
  pull_request:
    paths:
      - exchange-rates/**
      - .github/**
      - .custon-ci-actions/**
    branches:
      - main
      - staging
      - stable

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with registry
        run: |
          echo "${{secrets.REGISTRY_PASSWORD}}" | docker login -u "${{secrets.REGISTRY_USER}}" ${{secrets.REGISTRY_URI}} --password-stdin
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate semantic version
        id: semver
        uses: ./.custon-ci-actions/semver-tag-generator/
        with:
          sub-path: 'exchange-rates'
      - name: Generate image name and tag
        id: naming
        env:
          DOCKER_PROJECT: piximos
          IMAGE_NAME: crypto-exchange
        run: |
          IMAGE="${{secrets.REGISTRY_URI}}/${DOCKER_PROJECT}/${IMAGE_NAME}"
          
          if [[ -z ${{ github.event.number }} ]]; then
            IMAGE_TAG="${{ steps.semver.outputs.semver }}-${GITHUB_BRANCH#refs/heads/}"
          else
            IMAGE_TAG="pr-${{ github.event.number }}-${{ github.base_ref }}-${GITHUB_SHA:0:8}"
          fi
          
          echo "::set-output name=image_name::${IMAGE}"
          echo "::set-output name=image_tag::${IMAGE_TAG}"
      - name: Package and publish
        run: ./.github/.scripts/docker-build.sh
        env:
          DOCKER_BUILDKIT: 1
          IMAGE_NAME: "${{ steps.naming.outputs.image_name }}"
          IMAGE_TAG: "${{ steps.naming.outputs.image_tag }}"
          DOCKER_IMAGE_PATH: 'exchange-rates/Dockerfile'
          DOCKER_BUILD_CONTEXT: 'exchange-rates/.'
      - name: Scan app vulnerabilities
        if: ${{ github.event_name }} == "pull_request"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ steps.naming.outputs.image_name }}:${{ steps.naming.outputs.image_tag }}'
          ignore-unfixed: true
          format: 'json'
          output: 'vulnerabilities-report.json'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          exit-code: '0'
      - name: Parse and format scan report
        if: ${{ github.event_name }} == "pull_request"
        uses: ./.custon-ci-actions/trivy-scan-report-parser/
        with:
          input-file: 'vulnerabilities-report.json'
          output-file: 'pr-feedback.md'
          package-json-path: 'exchange-rates/package.json'
      - name: Comment vulnerabilities on PR
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: These following vulnerabilities were found
          recreate: true
          path: 'pr-feedback.md'
      - name: Cleanup
        env:
          IMAGE_NAME: "${{ steps.naming.outputs.image_name }}"
          IMAGE_TAG: "${{ steps.naming.outputs.image_tag }}"
        run: |
          docker rmi "${IMAGE_NAME}:${IMAGE_TAG}" || true
